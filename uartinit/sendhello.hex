e3 a0 24 3f # mov r2,     0x3f000000
e2 82 28 21 # add r2, r2, 0x00210000
e2 82 2A 05 # add r2, r2, 0x00005000
e2 82 20 40 # add r2, r2, 0x00000040

e2 82 10 14 # add r1, r2, 14

# print "hello, world\r\n" - 0xD chars
e3 a0 30 10 # mov r3, 10
            # start at offet from the ldr instruction below to the first letter

e5 91 00 00 # ldr r0, [r1]
e3 10 00 20 # tst r0, 0x20
0a ff ff fc # beq -4 bytes (2 back to ldr + 2 from prefetch)

e7 9f 00 03 # ldr r0, [pc + r3]
e5 82 00 00 # str r0, [r2]

e2 83 30 04 # add r3, r3, 4
e3 53 00 44 # cmp r3, 44 # 0x10 base value + 0xd letters in string * 4 bytes = 34
1a ff ff f7 # branch back if not equal

ea ff ff fe # b 0x00, loop forever

00 00 00 68 # 'h'
00 00 00 65 # 'e'
00 00 00 6c # 'l'
00 00 00 6c # 'l'
00 00 00 6f # 'o'
00 00 00 20 # ' '
00 00 00 77 # 'w'
00 00 00 6f # 'o'
00 00 00 72 # 'r'
00 00 00 6c # 'l'
00 00 00 64 # 'd'
00 00 00 0d # '\r'
00 00 00 0a # '\n'